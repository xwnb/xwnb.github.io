<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sun of Beach</title>
  <icon>https://xwnb.github.io/icon.png</icon>
  <subtitle>Stay Angry, Stay Foolish</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xwnb.github.io/"/>
  <updated>2020-06-22T15:51:33.103Z</updated>
  <id>https://xwnb.github.io/</id>
  
  <author>
    <name>村口最靓的 小Xu</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>自动驾驶仿真 - AirSim (9) - 如何在 AirSim 使用雷达</title>
    <link href="https://xwnb.github.io/posts/954477841/"/>
    <id>https://xwnb.github.io/posts/954477841/</id>
    <published>2020-06-22T15:45:55.000Z</published>
    <updated>2020-06-22T15:51:33.103Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;针对载具和汽车，AirSim 支持雷达。&lt;/p&gt;
&lt;p&gt;可用及其他雷达设定可以通过 AirSimSettings json 配置.&lt;br&gt;请查看 &lt;a href=&quot;sensors.md&quot;&gt;general sensors&lt;/a&gt; 获取通用/共享的传感器设置.&lt;/p&gt;
    
    </summary>
    
    
      <category term="自动驾驶" scheme="https://xwnb.github.io/categories/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/"/>
    
    
      <category term="自动驾驶" scheme="https://xwnb.github.io/tags/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/"/>
    
      <category term="AirSim" scheme="https://xwnb.github.io/tags/AirSim/"/>
    
  </entry>
  
  <entry>
    <title>自动驾驶仿真 - AirSim (8) - AirSim 传感器</title>
    <link href="https://xwnb.github.io/posts/3783722863/"/>
    <id>https://xwnb.github.io/posts/3783722863/</id>
    <published>2020-06-22T15:45:43.000Z</published>
    <updated>2020-06-22T15:51:33.103Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;AirSim 目前支持一下传感器.&lt;/p&gt;
&lt;p&gt;每类传感器都与之关联一个整型枚举值来表示传感器类型.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Camera&lt;/li&gt;
&lt;li&gt;Barometer = 1&lt;/li&gt;
&lt;li&gt;Imu = 2&lt;/li&gt;
&lt;li&gt;Gps = 3&lt;/li&gt;
&lt;li&gt;Magnetometer = 4&lt;/li&gt;
&lt;li&gt;Distance Sensor = 5&lt;/li&gt;
&lt;li&gt;Lidar = 6&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt; : 相机配置与其他传感器不一样,所以没有关联枚举值. 相机配置和 API 查看 &lt;a href=&quot;settings.md&quot;&gt;general settings&lt;/a&gt; 和 &lt;a href=&quot;image_apis.md&quot;&gt;image API&lt;/a&gt; .&lt;/p&gt;
    
    </summary>
    
    
      <category term="自动驾驶" scheme="https://xwnb.github.io/categories/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/"/>
    
    
      <category term="自动驾驶" scheme="https://xwnb.github.io/tags/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/"/>
    
      <category term="AirSim" scheme="https://xwnb.github.io/tags/AirSim/"/>
    
  </entry>
  
  <entry>
    <title>自动驾驶仿真 - AirSim(7) - AirSim 多载具</title>
    <link href="https://xwnb.github.io/posts/2251441435/"/>
    <id>https://xwnb.github.io/posts/2251441435/</id>
    <published>2020-06-22T15:45:31.000Z</published>
    <updated>2020-06-22T15:51:33.101Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;从 release 1.2 开始, AirSim 完全能够支持多载具. 这能允许你更简单的创建多个载具并用 APIs 来控制它们.&lt;/p&gt;
    
    </summary>
    
    
      <category term="自动驾驶" scheme="https://xwnb.github.io/categories/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/"/>
    
    
      <category term="自动驾驶" scheme="https://xwnb.github.io/tags/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/"/>
    
      <category term="AirSim" scheme="https://xwnb.github.io/tags/AirSim/"/>
    
  </entry>
  
  <entry>
    <title>自动驾驶仿真 - AirSim (6) - 设置</title>
    <link href="https://xwnb.github.io/posts/1270863220/"/>
    <id>https://xwnb.github.io/posts/1270863220/</id>
    <published>2020-06-22T15:45:09.000Z</published>
    <updated>2020-06-22T15:51:33.101Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;接下去主要介绍一下 &lt;code&gt;AirSim&lt;/code&gt; 的配置参数, 主要翻译了 &lt;a href=&quot;https://microsoft.github.io/AirSim/settings&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方&lt;/a&gt; 文档.&lt;/p&gt;
    
    </summary>
    
    
      <category term="自动驾驶" scheme="https://xwnb.github.io/categories/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/"/>
    
    
      <category term="自动驾驶" scheme="https://xwnb.github.io/tags/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/"/>
    
      <category term="AirSim" scheme="https://xwnb.github.io/tags/AirSim/"/>
    
  </entry>
  
  <entry>
    <title>自动驾驶仿真 - AirSim (5) - 图片 APIs - C++</title>
    <link href="https://xwnb.github.io/posts/3314168402/"/>
    <id>https://xwnb.github.io/posts/3314168402/</id>
    <published>2020-06-22T15:44:54.000Z</published>
    <updated>2020-06-22T15:52:58.191Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;接下去主要介绍一下 &lt;code&gt;AirSim&lt;/code&gt; 的 &lt;code&gt;APIs&lt;/code&gt; 的使用, 主要参考 &lt;a href=&quot;https://microsoft.github.io/AirSim/image_apis/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方&lt;/a&gt; 文档, 并结合结合 OpenCV 来用 C++ 实现部分 官方 Python 的例程.&lt;/p&gt;
    
    </summary>
    
    
      <category term="自动驾驶" scheme="https://xwnb.github.io/categories/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/"/>
    
    
      <category term="自动驾驶" scheme="https://xwnb.github.io/tags/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/"/>
    
      <category term="AirSim" scheme="https://xwnb.github.io/tags/AirSim/"/>
    
  </entry>
  
  <entry>
    <title>自动驾驶仿真 - AirSim (4) - 核心 APIs - C++</title>
    <link href="https://xwnb.github.io/posts/1307933338/"/>
    <id>https://xwnb.github.io/posts/1307933338/</id>
    <published>2020-06-22T15:44:22.000Z</published>
    <updated>2020-06-22T15:52:35.945Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;接下去主要介绍一下 &lt;code&gt;AirSim&lt;/code&gt; 的 &lt;code&gt;APIs&lt;/code&gt; 的使用. &lt;a href=&quot;https://microsoft.github.io/AirSim/apis/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方&lt;/a&gt; 提供了 &lt;code&gt;Python&lt;/code&gt; 和 &lt;code&gt;C++&lt;/code&gt; 两个版本, 我这里就主要以 &lt;code&gt;C++&lt;/code&gt; 来试验.&lt;/p&gt;
&lt;p&gt;这篇文章的 &lt;code&gt;Hello Car&lt;/code&gt; 的&lt;a href=&quot;https://microsoft.github.io/AirSim/apis_cpp/#hello_car&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;源码&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
      <category term="自动驾驶" scheme="https://xwnb.github.io/categories/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/"/>
    
    
      <category term="自动驾驶" scheme="https://xwnb.github.io/tags/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/"/>
    
      <category term="AirSim" scheme="https://xwnb.github.io/tags/AirSim/"/>
    
  </entry>
  
  <entry>
    <title>自动驾驶仿真 - AirSim (3) - 配置 Visual Studio 工程</title>
    <link href="https://xwnb.github.io/posts/531482360/"/>
    <id>https://xwnb.github.io/posts/531482360/</id>
    <published>2020-06-22T15:43:57.000Z</published>
    <updated>2020-06-22T15:52:19.665Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;接下来的文章主要开始记录 AirSim 提供的 APIs 的学习。但是在自己新建一个工程的时候发现，配置有很多问题，这里先解决一下。&lt;/p&gt;
&lt;p&gt;在第一篇文章【AirSim 仿真 (1) - Windows 10 下安装仿真平台 AirSim - v1.3.1】，跑了一下示例工程 &lt;code&gt;Hello Car&lt;/code&gt; . 因为工程配置的关系，发现吧这个工程拷贝出来后，在打开编译不了。但是自己码工程的时候，目录不一定非得限制到 AirSim 的工程目录下吧，总归自己有个文件夹的。&lt;/p&gt;
&lt;p&gt;其实看一下 &lt;code&gt;Hello Car&lt;/code&gt; 的工程属性配置可以看到其实编译不了的原因，无非是包含目录、依赖库的关系。因此，这里主要解决一下这些配置问题。&lt;/p&gt;
    
    </summary>
    
    
      <category term="自动驾驶" scheme="https://xwnb.github.io/categories/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/"/>
    
    
      <category term="自动驾驶" scheme="https://xwnb.github.io/tags/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/"/>
    
      <category term="AirSim" scheme="https://xwnb.github.io/tags/AirSim/"/>
    
  </entry>
  
  <entry>
    <title>自动驾驶仿真 - AirSim (1) - Windows 10 下安装仿真平台 AirSim - v1.3.1</title>
    <link href="https://xwnb.github.io/posts/4243726933/"/>
    <id>https://xwnb.github.io/posts/4243726933/</id>
    <published>2020-06-22T15:42:42.000Z</published>
    <updated>2020-06-22T15:52:04.871Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近在学习自动驾驶相关的知识，看很多公司都是基于百度 &lt;code&gt;Apollo&lt;/code&gt; 平台的，不过因为基于 Linux。手头电脑上只有虚拟机，显卡什么不能用，跑起来有点费劲。然后找到了微软开放的一个仿真平台 &lt;code&gt;AirSim&lt;/code&gt;。因为微软加持，所以在 &lt;code&gt;Windows&lt;/code&gt;平台就很方便，另外也有 &lt;code&gt;Linux&lt;/code&gt;版本。（等买一个新硬盘再装个 &lt;code&gt;Linux&lt;/code&gt;系统再用下 &lt;code&gt;Apollo&lt;/code&gt; 和 &lt;code&gt;AirSim&lt;/code&gt; ）。本文主要记录了 &lt;code&gt;Windows 10&lt;/code&gt; 下安装 &lt;code&gt;AirSim - v1.3.1&lt;/code&gt;的步骤。&lt;/p&gt;
    
    </summary>
    
    
      <category term="自动驾驶" scheme="https://xwnb.github.io/categories/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/"/>
    
    
      <category term="自动驾驶" scheme="https://xwnb.github.io/tags/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/"/>
    
      <category term="AirSim" scheme="https://xwnb.github.io/tags/AirSim/"/>
    
  </entry>
  
  <entry>
    <title>自动驾驶仿真 - AirSim (2) - 创建并设置 Unreal Engine 环境</title>
    <link href="https://xwnb.github.io/posts/2194771931/"/>
    <id>https://xwnb.github.io/posts/2194771931/</id>
    <published>2020-06-22T15:42:09.000Z</published>
    <updated>2020-06-22T15:52:12.265Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;对自定义 UE 环境导入 AirSim 插件小车。本文主要参考官方文档 &lt;a href=&quot;https://microsoft.github.io/AirSim/unreal_custenv/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Creating and Setting Up Unreal Environment&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
    
      <category term="自动驾驶" scheme="https://xwnb.github.io/categories/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/"/>
    
    
      <category term="自动驾驶" scheme="https://xwnb.github.io/tags/%E8%87%AA%E5%8A%A8%E9%A9%BE%E9%A9%B6/"/>
    
      <category term="AirSim" scheme="https://xwnb.github.io/tags/AirSim/"/>
    
  </entry>
  
  <entry>
    <title>路径规划-RRT_Star</title>
    <link href="https://xwnb.github.io/posts/3092301982/"/>
    <id>https://xwnb.github.io/posts/3092301982/</id>
    <published>2020-06-20T06:59:22.000Z</published>
    <updated>2020-06-22T14:56:15.109Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;路径规划之-RRT-Star&quot;&gt;&lt;a href=&quot;#路径规划之-RRT-Star&quot; class=&quot;headerlink&quot; title=&quot;路径规划之 RRT_Star&quot;&gt;&lt;/a&gt;路径规划之 RRT_Star&lt;/h1&gt;&lt;p&gt;RRT_Connect 相对于 RRT 虽然增加了启发式策略和贪婪思想，但他们的路径都不是最优的。搜索路径都是基于随机采样，缺少评价函数。RRT_Star 算法在 RRT 的基础上，基于代价函数来重新选择新父节点，重新布线新子节点，保证算法渐进最优解。&lt;/p&gt;
    
    </summary>
    
    
      <category term="路径规划" scheme="https://xwnb.github.io/categories/%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%92/"/>
    
    
      <category term="路径规划" scheme="https://xwnb.github.io/tags/%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%92/"/>
    
      <category term="motion planning" scheme="https://xwnb.github.io/tags/motion-planning/"/>
    
      <category term="RRT*" scheme="https://xwnb.github.io/tags/RRT/"/>
    
  </entry>
  
  <entry>
    <title>路径规划-RRT_Connect</title>
    <link href="https://xwnb.github.io/posts/2708526344/"/>
    <id>https://xwnb.github.io/posts/2708526344/</id>
    <published>2020-06-20T06:57:57.000Z</published>
    <updated>2020-06-21T06:47:23.729Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;路径规划之-RRT-Connect-平衡双向快速扩展随机树&quot;&gt;&lt;a href=&quot;#路径规划之-RRT-Connect-平衡双向快速扩展随机树&quot; class=&quot;headerlink&quot; title=&quot;路径规划之 RRT_Connect (平衡双向快速扩展随机树)&quot;&gt;&lt;/a&gt;路径规划之 RRT_Connect (平衡双向快速扩展随机树)&lt;/h1&gt;&lt;p&gt;单颗 RRT 树每次搜索只从初始节点开始在状态空间中快速随机扩展节点，带有一定的盲目性。RRT_Connect 算法是一种基于双向扩展平衡的连结型双树(Balanced Bidirectional RRT)：两颗 RRTs 分别基于 $q_{init}$ 和 $q_{goal}$ 扩展；贪心启发式的连接方法使每棵树扩展时一次移动更长的距离。&lt;a href=&quot;https://ieeexplore.ieee.org/document/844730&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;作者&lt;/a&gt;原文中举例了平面地图以及 6-DOF 的机械臂来验证 RRT_Connect.&lt;/p&gt;
    
    </summary>
    
    
      <category term="路径规划" scheme="https://xwnb.github.io/categories/%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%92/"/>
    
    
      <category term="路径规划" scheme="https://xwnb.github.io/tags/%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%92/"/>
    
      <category term="motion planning" scheme="https://xwnb.github.io/tags/motion-planning/"/>
    
      <category term="RRT_Connect" scheme="https://xwnb.github.io/tags/RRT-Connect/"/>
    
  </entry>
  
  <entry>
    <title>路径规划-LPA_Star</title>
    <link href="https://xwnb.github.io/posts/367356294/"/>
    <id>https://xwnb.github.io/posts/367356294/</id>
    <published>2020-06-20T06:56:21.000Z</published>
    <updated>2020-06-21T07:40:33.076Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;路径规划之-LPA-Star-LPA&quot;&gt;&lt;a href=&quot;#路径规划之-LPA-Star-LPA&quot; class=&quot;headerlink&quot; title=&quot;路径规划之 LPA_Star (LPA*)&quot;&gt;&lt;/a&gt;路径规划之 LPA_Star (LPA*)&lt;/h1&gt;&lt;p&gt;LPA*是 A*的增量版本. 相比于 A*算法, 首次规划时, 两者过程类似. 假如地图发生变化, A*算法需要重新规划路径. 而 LPA*算法可以通过在当前搜索期间内更新前一次搜索的 g 值（距起始距离）来适应地图变化而无需重新计算整个地图。&lt;/p&gt;
    
    </summary>
    
    
      <category term="路径规划" scheme="https://xwnb.github.io/categories/%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%92/"/>
    
    
      <category term="路径规划" scheme="https://xwnb.github.io/tags/%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%92/"/>
    
      <category term="motion planning" scheme="https://xwnb.github.io/tags/motion-planning/"/>
    
      <category term="LPA*" scheme="https://xwnb.github.io/tags/LPA/"/>
    
  </entry>
  
  <entry>
    <title>路径规划-A_Star</title>
    <link href="https://xwnb.github.io/posts/1627378678/"/>
    <id>https://xwnb.github.io/posts/1627378678/</id>
    <published>2020-06-20T06:00:16.000Z</published>
    <updated>2020-06-21T06:49:14.229Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;路径规划之-A-Star-A&quot;&gt;&lt;a href=&quot;#路径规划之-A-Star-A&quot; class=&quot;headerlink&quot; title=&quot;路径规划之 A_Star (A*)&quot;&gt;&lt;/a&gt;路径规划之 A_Star (A*)&lt;/h1&gt;&lt;p&gt;A*算法是一种基于启发式搜索的算法，该算法综合了 BFS(最佳优先搜索)和 Dijkstra 算法的优点：在进行启发式搜索提高算法效率的同时，可以保证找到一条最优路径。&lt;/p&gt;
    
    </summary>
    
    
      <category term="路径规划" scheme="https://xwnb.github.io/categories/%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%92/"/>
    
    
      <category term="路径规划" scheme="https://xwnb.github.io/tags/%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%92/"/>
    
      <category term="motion planning" scheme="https://xwnb.github.io/tags/motion-planning/"/>
    
      <category term="A*" scheme="https://xwnb.github.io/tags/A/"/>
    
  </entry>
  
  <entry>
    <title>路径规划-RRT</title>
    <link href="https://xwnb.github.io/posts/2955947163/"/>
    <id>https://xwnb.github.io/posts/2955947163/</id>
    <published>2020-03-07T04:30:47.000Z</published>
    <updated>2020-06-21T06:54:54.635Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;路径规划之-Rapidly-Exploring-Random-Trees-快速扩展随机树&quot;&gt;&lt;a href=&quot;#路径规划之-Rapidly-Exploring-Random-Trees-快速扩展随机树&quot; class=&quot;headerlink&quot; title=&quot;路径规划之 Rapidly-Exploring Random Trees (快速扩展随机树)&quot;&gt;&lt;/a&gt;路径规划之 Rapidly-Exploring Random Trees (快速扩展随机树)&lt;/h1&gt;&lt;p&gt;RRTs 作为一种 single-query 的规划算法被引入，它有效地覆盖了 q~init~ 和 q~goal~ 之间的空间。该规划器最初也是为 kinodynamic 运动规划而开发的，就像在 ESTs 中一样，只构建一棵树。RRTs 的适用范围超出了 kinodynamic 规划问题。RRT 算法已被证明是概率完备的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="路径规划" scheme="https://xwnb.github.io/categories/%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%92/"/>
    
    
      <category term="路径规划" scheme="https://xwnb.github.io/tags/%E8%B7%AF%E5%BE%84%E8%A7%84%E5%88%92/"/>
    
      <category term="motion planning" scheme="https://xwnb.github.io/tags/motion-planning/"/>
    
      <category term="RRT" scheme="https://xwnb.github.io/tags/RRT/"/>
    
  </entry>
  
  <entry>
    <title>ROS学习-controller_manager</title>
    <link href="https://xwnb.github.io/posts/1366633795/"/>
    <id>https://xwnb.github.io/posts/1366633795/</id>
    <published>2019-10-26T06:58:05.000Z</published>
    <updated>2020-03-07T04:21:19.484Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;controller_manager&lt;/code&gt;提供硬实时兼容的环来控制的机械手,由一个&lt;code&gt;hardware_interface::RobotHW&lt;/code&gt;实例代表(参见&lt;code&gt;hardware_interface&lt;/code&gt;包).该&lt;code&gt;controller_manager&lt;/code&gt;提供了加载,卸载,启动和停止控制器的基本结构.&lt;/p&gt;
    
    </summary>
    
    
      <category term="ROS学习" scheme="https://xwnb.github.io/categories/ROS%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="ROS" scheme="https://xwnb.github.io/tags/ROS/"/>
    
      <category term="controller_manager" scheme="https://xwnb.github.io/tags/controller-manager/"/>
    
  </entry>
  
  <entry>
    <title>ROS学习-ur5机器人的gazebo仿真以及controller的使用</title>
    <link href="https://xwnb.github.io/posts/1500545740/"/>
    <id>https://xwnb.github.io/posts/1500545740/</id>
    <published>2019-10-26T04:55:28.000Z</published>
    <updated>2020-03-07T04:21:22.570Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;这篇文章主要介绍了如何在&lt;code&gt;gazebo&lt;/code&gt;中对&lt;code&gt;ur5&lt;/code&gt;进行仿真和&lt;code&gt;controller&lt;/code&gt;的使用，包括&lt;code&gt;controller_manager&lt;/code&gt;的使用和控制器&lt;code&gt;command&lt;/code&gt;的主题数据发布。&lt;/p&gt;
    
    </summary>
    
    
      <category term="ROS学习" scheme="https://xwnb.github.io/categories/ROS%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="ROS" scheme="https://xwnb.github.io/tags/ROS/"/>
    
      <category term="gazebo" scheme="https://xwnb.github.io/tags/gazebo/"/>
    
      <category term="controller-manager" scheme="https://xwnb.github.io/tags/controller-manager/"/>
    
      <category term="ur5" scheme="https://xwnb.github.io/tags/ur5/"/>
    
  </entry>
  
  <entry>
    <title>ROS学习-xacro</title>
    <link href="https://xwnb.github.io/posts/2389657244/"/>
    <id>https://xwnb.github.io/posts/2389657244/</id>
    <published>2019-10-24T13:16:49.000Z</published>
    <updated>2020-03-07T04:21:17.295Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Xacro(XML Macros)Xacro是一种XML宏语言. 使用xacro, 可以通过使用宏命令构建更精悍短小但又具有更高可读性的XML文件, 这种宏命令可以扩展达到更大的XML表达范围. 此包在处理大型XML文档(如机器人说明)时最为有用. 它在如urdf的包中大量使用. 本文主要来源于&lt;a href=&quot;http://wiki.ros.org/xacro&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;官方教程&lt;/a&gt;. &lt;/p&gt;
    
    </summary>
    
    
      <category term="ROS学习" scheme="https://xwnb.github.io/categories/ROS%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="ROS" scheme="https://xwnb.github.io/tags/ROS/"/>
    
      <category term="xacro" scheme="https://xwnb.github.io/tags/xacro/"/>
    
  </entry>
  
  <entry>
    <title>ROS学习-roslaunch_xml</title>
    <link href="https://xwnb.github.io/posts/73359715/"/>
    <id>https://xwnb.github.io/posts/73359715/</id>
    <published>2019-10-22T14:25:52.000Z</published>
    <updated>2020-03-07T04:21:08.363Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;这个页面描述了用于&lt;code&gt;roslaunch&lt;/code&gt;的&lt;code&gt;.launch&lt;/code&gt;文件的&lt;code&gt;XML&lt;/code&gt;格式. 有关&lt;code&gt;roslaunch&lt;/code&gt;的背景、功能和相关工具, 请先访问&lt;code&gt;roslaunch&lt;/code&gt;页面. &lt;/p&gt;
    
    </summary>
    
    
      <category term="ROS学习" scheme="https://xwnb.github.io/categories/ROS%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="ROS" scheme="https://xwnb.github.io/tags/ROS/"/>
    
      <category term="roslaunch" scheme="https://xwnb.github.io/tags/roslaunch/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序开发-input正则</title>
    <link href="https://xwnb.github.io/posts/1318413979/"/>
    <id>https://xwnb.github.io/posts/1318413979/</id>
    <published>2019-10-04T09:01:43.000Z</published>
    <updated>2019-10-22T13:58:26.024Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;检查 &lt;code&gt;input&lt;/code&gt;输入框是否输入限制字符。如果是，则丢弃；否则，正常输入。&lt;/p&gt;
    
    </summary>
    
    
      <category term="微信小程序开发" scheme="https://xwnb.github.io/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="wechat-dev" scheme="https://xwnb.github.io/tags/wechat-dev/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序开发-布局flex</title>
    <link href="https://xwnb.github.io/posts/208261819/"/>
    <id>https://xwnb.github.io/posts/208261819/</id>
    <published>2019-10-04T07:38:54.000Z</published>
    <updated>2019-10-04T09:01:07.860Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;微信小程序开发-布局flex&lt;/p&gt;
    
    </summary>
    
    
      <category term="微信小程序开发" scheme="https://xwnb.github.io/categories/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="wechat-dev" scheme="https://xwnb.github.io/tags/wechat-dev/"/>
    
  </entry>
  
</feed>
